#include <Arduino.h> 
#include <TFT_eSPI.h> 
#include "SystemMonitor.h" 
#include "InputManager.h"  
#include "ButtonManager.h" 
#include "LEDManager.h" 

// --- KHAI B√ÅO C√ÅC H·∫∞NG S·ªê HI·ªÇN TH·ªä TO√ÄN C·ª§C ---
const int MSG_X = 5;
const int MSG_Y = 70;
const int MSG_WIDTH = 230; 
const int MSG_HEIGHT = 20; 

// --- KHAI B√ÅO TH√îNG S·ªê PH·∫¶N C·ª®NG TO√ÄN C·ª§C ---
const int TOUCH_BUTTON_PIN = 13; 

// --- KHAI B√ÅO ENUM CHO TR·∫†NG TH√ÅI HI·ªÇN TH·ªä ---
enum DisplayState {
    STATE_NONE,       // Kh√¥ng c√≥ n√∫t n√†o ƒë∆∞·ª£c nh·∫•n
    STATE_UP,
    STATE_DOWN,
    STATE_LEFT,
    STATE_RIGHT,
    STATE_TOUCH       // ƒêang gi·ªØ n√∫t ch·∫°m
};

// --- KHAI B√ÅO C√ÅC ƒê·ªêI T∆Ø·ª¢NG TO√ÄN C·ª§C (GLOBAL OBJECTS) ---
TFT_eSPI tft = TFT_eSPI(); 
SystemMonitor monitor(tft);
InputManager touchButton(TOUCH_BUTTON_PIN); 
ButtonManager physicalButtons;              
LEDManager ledControl;

// --- BI·∫æN TR·∫†NG TH√ÅI TO√ÄN C·ª§C ---
// D√πng ƒë·ªÉ theo d√µi tr·∫°ng th√°i hi·ªÉn th·ªã hi·ªán t·∫°i, ch·ªâ c·∫≠p nh·∫≠t khi tr·∫°ng th√°i thay ƒë·ªïi.
DisplayState previousState = STATE_NONE; 


// --- SETUP ---
void setup() {
    Serial.begin(115200);
    delay(1000); 
    
    monitor.begin(); 
    touchButton.begin();
    physicalButtons.begin(); 
    
    monitor.displayMemoryStatus(); 
    
    delay(5000);
    tft.fillScreen(TFT_BLACK); 
    
    // H∆∞·ªõng d·∫´n ban ƒë·∫ßu
    tft.setTextColor(TFT_WHITE, TFT_BLACK);
    tft.setTextSize(2);
    tft.setCursor(10, 10);
    tft.println("READY!");
    tft.setTextSize(1);
    tft.setCursor(10, 40);
    tft.println("Test 4 buttons and Touch.");
    
    ledControl.begin(); 
}

// --- LOOP (Ng∆∞·ªùi ƒêi·ªÅu Ph·ªëi) ---
void loop() {
    // 1. C·∫¨P NH·∫¨T TR·∫†NG TH√ÅI N√öT V√Ä TOUCH
    physicalButtons.update(); 
    touchButton.checkButton(); // C·∫ßn g·ªçi ƒë·ªÉ logic ch·ªëng rung ƒë∆∞·ª£c th·ª±c thi v√† c·∫≠p nh·∫≠t tr·∫°ng th√°i isPressed

    bool isTouching = touchButton.isTouched(); 

    // 2. X√ÅC ƒê·ªäNH TR·∫†NG TH√ÅI HI·ªÇN TH·ªä M·ªöI
    DisplayState newState = STATE_NONE;
    
    // ∆Øu ti√™n n√∫t v·∫≠t l√Ω
    if (physicalButtons.isPressed(BTN_UP)) { 
        newState = STATE_UP;
    } else if (physicalButtons.isPressed(BTN_DOWN)) { 
        newState = STATE_DOWN;
    } else if (physicalButtons.isPressed(BTN_LEFT)) { 
        newState = STATE_LEFT;
    } else if (physicalButtons.isPressed(BTN_RIGHT)) { 
        newState = STATE_RIGHT;
    } else if (isTouching) { 
        newState = STATE_TOUCH;
    } 

    // 3. üåü LOGIC CH·ªêNG NH√íE: CH·ªà C·∫¨P NH·∫¨T M√ÄN H√åNH KHI TR·∫†NG TH√ÅI THAY ƒê·ªîI üåü
    if (newState != previousState) {
        
        // 3a. X√ìA KHU V·ª∞C C≈® TR∆Ø·ªöC KHI V·∫º M·ªöI
        tft.fillRect(MSG_X, MSG_Y, MSG_WIDTH, MSG_HEIGHT, TFT_BLACK); 
        tft.setCursor(MSG_X, MSG_Y); 
        tft.setTextSize(2);

        // 3b. V·∫º N·ªòI DUNG M·ªöI D·ª∞A TR√äN TR·∫†NG TH√ÅI
        switch (newState) {
            case STATE_UP:
                tft.setTextColor(TFT_YELLOW, TFT_BLACK);
                tft.println("UP Pressed!");
                break;
            case STATE_DOWN:
                tft.setTextColor(TFT_YELLOW, TFT_BLACK);
                tft.println("DOWN Pressed!");
                break;
            case STATE_LEFT:
                tft.setTextColor(TFT_YELLOW, TFT_BLACK);
                tft.println("LEFT Pressed!");
                break;
            case STATE_RIGHT:
                tft.setTextColor(TFT_YELLOW, TFT_BLACK);
                tft.println("RIGHT Pressed!");
                break;
            case STATE_TOUCH:
                tft.setTextColor(TFT_GREEN, TFT_BLACK);
                tft.println("TOUCH Action!");
                break;
            case STATE_NONE:
            default:
                // Tr·∫°ng th√°i NONE: khu v·ª±c ƒë√£ ƒë∆∞·ª£c x√≥a ·ªü 3a, kh√¥ng in g√¨
                break;
        }

        // 3c. L∆ØU TR·∫†NG TH√ÅI M·ªöI ƒë·ªÉ so s√°nh ·ªü l·∫ßn l·∫∑p ti·∫øp theo
        previousState = newState;
    }
    
    // DEBUG RAW STATE (Gi·ªØ nguy√™n)
    int rawState = digitalRead(TOUCH_BUTTON_PIN);
    
    tft.setTextSize(1);
    tft.setTextColor(TFT_WHITE, TFT_BLACK);
    tft.setCursor(10, 150);
    tft.printf("RAW State (Pin %d): %d", TOUCH_BUTTON_PIN, rawState);
    
    // Ch·∫°y hi·ªáu ·ª©ng LED
    delay(10); 
    ledControl.runGreenFade(); 
}